{"version":3,"sources":["../lib/utils/uri.ts"],"names":[],"mappings":"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","file":"uri.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from './platform';\nimport { CharCode } from './char-code';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nlet _throwOnMissingSchema: boolean = true;\n\n/**\n * @internal\n */\nexport function setUriThrowOnMissingScheme(value: boolean): boolean {\n\tconst old = _throwOnMissingSchema;\n\t_throwOnMissingSchema = value;\n\treturn old;\n}\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\t// scheme, must be set\n\tif (!ret.scheme) {\n\t\tif (_strict || _throwOnMissingSchema) {\n\t\t\tthrow new Error(\n\t\t\t\t`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`\n\t\t\t);\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`\n\t\t\t);\n\t\t}\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character'\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (_strict || _throwOnMissingSchema) {\n\t\treturn scheme || _empty;\n\t}\n\tif (!scheme) {\n\t\tconsole.trace('BAD uri lacks scheme, falling back to file-scheme.');\n\t\tscheme = 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\ttypeof (<URI>thing).authority === 'string' &&\n\t\t\ttypeof (<URI>thing).fragment === 'string' &&\n\t\t\ttypeof (<URI>thing).path === 'string' &&\n\t\t\ttypeof (<URI>thing).query === 'string' &&\n\t\t\ttypeof (<URI>thing).scheme === 'string' &&\n\t\t\ttypeof (<URI>thing).fsPath === 'function' &&\n\t\t\ttypeof (<URI>thing).with === 'function' &&\n\t\t\ttypeof (<URI>thing).toString === 'function'\n\t\t);\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(\n\t\tscheme: string,\n\t\tauthority?: string,\n\t\tpath?: string,\n\t\tquery?: string,\n\t\tfragment?: string,\n\t\t_strict?: boolean\n\t);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(\n\t\tschemeOrData: string | UriComponents,\n\t\tauthority?: string,\n\t\tpath?: string,\n\t\tquery?: string,\n\t\tfragment?: string,\n\t\t_strict: boolean = false\n\t) {\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: {\n\t\tscheme?: string;\n\t\tauthority?: string | null;\n\t\tpath?: string | null;\n\t\tquery?: string | null;\n\t\tfragment?: string | null;\n\t}): URI {\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (\n\t\t\tscheme === this.scheme &&\n\t\t\tauthority === this.authority &&\n\t\t\tpath === this.path &&\n\t\t\tquery === this.query &&\n\t\t\tfragment === this.fragment\n\t\t) {\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tdecodeURIComponent(match[4] || _empty),\n\t\t\tdecodeURIComponent(match[5] || _empty),\n\t\t\tdecodeURIComponent(match[7] || _empty),\n\t\t\tdecodeURIComponent(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: {\n\t\tscheme: string;\n\t\tauthority?: string;\n\t\tpath?: string;\n\t\tquery?: string;\n\t\tfragment?: string;\n\t}): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data as null | undefined;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath =\n\t\t\t\t(<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// tslint:disable-next-line:class-name\nclass _URI extends URI {\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20'\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z) ||\n\t\t\t(code >= CharCode.A && code <= CharCode.Z) ||\n\t\t\t(code >= CharCode.Digit0 && code <= CharCode.Digit9) ||\n\t\t\tcode === CharCode.Dash ||\n\t\t\tcode === CharCode.Period ||\n\t\t\tcode === CharCode.Underline ||\n\t\t\tcode === CharCode.Tilde ||\n\t\t\t(allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash &&\n\t\t((uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z) ||\n\t\t\t(uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)) &&\n\t\turi.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\tconst encoder = !skipEncoding ? encodeURIComponentFast : encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (\n\t\t\tpath.length >= 3 &&\n\t\t\tpath.charCodeAt(0) === CharCode.Slash &&\n\t\t\tpath.charCodeAt(2) === CharCode.Colon\n\t\t) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n"]}